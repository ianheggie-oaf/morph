---
- name: Ensure latest git is installed
  apt: pkg=git state=latest

- name: Ensure that /var/discourse exists
  file: path=/var/discourse owner=deploy group=deploy state=directory

- name: Get the official discourse docker image
  command: git clone https://github.com/discourse/discourse_docker.git /var/discourse creates=/var/discourse/README.md

- name: Copy over app configuration
  template: src=app.yml dest=/var/discourse/containers/app.yml owner=deploy group=deploy

- name: Ensure shared directory has correct permissions
  file:
    path: /var/discourse/shared/standalone
    state: directory
    mode: '0755'

- name: Bootstrap discourse app
  shell: timeout 2400 ./launcher bootstrap app
  args:
    chdir: /var/discourse
    creates: /var/discourse/shared/standalone/log/rails/production.log
  ignore_errors: yes
  register: bootstrap_result
  notify: start discourse

- name: Check system resources before bootstrap
  shell: |
    echo "=== Memory ==="
    free -h
    echo "=== Disk ==="
    df -h
    echo "=== Docker Status ==="
    systemctl status docker --no-pager
  register: system_check

- name: Display system status
  debug:
    var: system_check.stdout_lines

- name: Display bootstrap result
  debug:
    msg: "Bootstrap {{ 'succeeded' if bootstrap_result.rc == 0 else 'failed or timed out' }}"

- name: Generate the nginx config for the app
  template: src=discourse.nginx dest=/etc/nginx/sites-available/{{ discourse_server_name }} owner=root group=root mode=644
  notify: restart nginx

- name: Make the nginx site active
  command: ln -s /etc/nginx/sites-available/{{ discourse_server_name }} /etc/nginx/sites-enabled/{{ discourse_server_name }} creates=/etc/nginx/sites-enabled/{{ discourse_server_name }}
  notify: restart nginx
